# Generated by Django 2.0.2 on 2018-03-12 10:40

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.query_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default='', max_length=600)),
                ('pub_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('accepted', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200)),
                ('content', models.CharField(default='', max_length=600)),
                ('pub_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
                ('questions', models.ManyToManyField(to='overboardapp.Question')),
            ],
        ),
        migrations.CreateModel(
            name='UserExtended',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reputation', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UsersBadge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.UserExtended')),
            ],
        ),
        migrations.CreateModel(
            name='UsersNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notif_date', models.DateTimeField(verbose_name='date received')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.UserExtended')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_date', models.DateTimeField(verbose_name='date voted')),
                ('value', models.IntegerField()),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=django.db.models.query_utils.Q(django.db.models.query_utils.Q(('app_label', 'overboardapp'), ('model', 'question'), _connector='AND'), django.db.models.query_utils.Q(('app_label', 'overboardapp'), ('model', 'answer'), _connector='AND'), _connector='OR'), null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('voter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overboardapp.UserExtended')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='asked_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overboardapp.UserExtended'),
        ),
        migrations.AddField(
            model_name='answer',
            name='published_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.UserExtended'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Question'),
        ),
    ]
