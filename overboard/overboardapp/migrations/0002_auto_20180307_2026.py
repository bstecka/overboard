# Generated by Django 2.0.2 on 2018-03-07 19:26

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('overboardapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default='', max_length=600)),
                ('pub_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('accepted', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default='', max_length=600)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('score', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionsTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('login', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('reputation', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UsersBadge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='UsersNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notif_date', models.DateTimeField(verbose_name='date received')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_date', models.DateTimeField(verbose_name='date voted')),
                ('value', models.IntegerField()),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Post')),
                ('voter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overboardapp.User')),
            ],
        ),
        migrations.RemoveField(
            model_name='choice',
            name='question',
        ),
        migrations.RemoveField(
            model_name='question',
            name='question_text',
        ),
        migrations.AddField(
            model_name='question',
            name='content',
            field=models.CharField(default='', max_length=600),
        ),
        migrations.AddField(
            model_name='question',
            name='title',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='question',
            name='pub_date',
            field=models.DateTimeField(blank=True, default=datetime.datetime.now),
        ),
        migrations.DeleteModel(
            name='Choice',
        ),
        migrations.AddField(
            model_name='questionstag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Tag'),
        ),
        migrations.AddField(
            model_name='answer',
            name='published_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overboardapp.User'),
        ),
        migrations.AddField(
            model_name='answer',
            name='related_question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overboardapp.Question'),
        ),
        migrations.AddField(
            model_name='question',
            name='asked_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overboardapp.User'),
        ),
    ]
